{
  "name": "event-to-promise",
  "version": "0.3.2",
  "license": "MIT",
  "description": "Create a promise waiting for an event",
  "keywords": [
    "event",
    "promise"
  ],
  "homepage": "https://github.com/julien-f/event-to-promise",
  "bugs": {
    "url": "https://github.com/julien-f/event-to-promise/issues"
  },
  "author": {
    "name": "Julien Fontanet",
    "email": "julien.fontanet@isonoe.net",
    "url": "http://julien.isonoe.net"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/julien-f/event-to-promise"
  },
  "dependencies": {
    "bluebird": "^2.2.2"
  },
  "devDependencies": {
    "chai": "^1.9.1",
    "mocha": "^1.21.3"
  },
  "scripts": {
    "test": "mocha index.spec.js"
  },
  "files": [
    "index.js"
  ],
  "readme": "# event-to-promise\n\n[![Build Status](https://img.shields.io/travis/julien-f/event-to-promise/master.svg)](http://travis-ci.org/julien-f/event-to-promise)\n[![Dependency Status](https://david-dm.org/julien-f/event-to-promise/status.svg?theme=shields.io)](https://david-dm.org/julien-f/event-to-promise)\n[![devDependency Status](https://david-dm.org/julien-f/event-to-promise/dev-status.svg?theme=shields.io)](https://david-dm.org/julien-f/event-to-promise#info=devDependencies)\n\n> Create a promise waiting for an event\n\n\n## Install\n\nDownload [manually](https://github.com/julien-f/event-to-promise/releases) or with package-manager.\n\n#### [npm](https://npmjs.org/package/event-to-promise)\n\n```\nnpm install --save event-to-promise\n```\n\n## Example\n\n```javascript\nvar eventToPromise = require('event-to-promise');\n\nvar createServer = function (port) {\n  var server = require('http').createServer();\n  server.listen(port);\n\n  // The server will be returned once it has started listening.\n  //\n  // If an error happened, it will be forwarded instead.\n  return eventToPromise(server, 'listening').then(function () {\n    return server;\n  });\n};\n\n// Using plain promise.\ncreateServer(80).then(function (server) {\n  console.log('Server listening on http://localhost:80/');\n}).catch(function (error) {\n  console.error('Server could not start:', error);\n});\n\n// Even better using generators!\nrequire('bluebird').coroutine(function *() {\n  try {\n    var server = yield createServer(80);\n    console.log('Server listening on http://localhost:80/');\n  } catch (error) {\n    console.error('Server could not start:', error);\n  }\n})();\n```\n\n## Contributing\n\nContributions are *very* welcome, either on the documentation or on\nthe code.\n\nYou may:\n\n- report any [issue](https://github.com/julien-f/event-to-promise/issues)\n  you've encountered;\n- fork and create a pull request.\n\n## License\n\nISC Â© [Julien Fontanet](http://julien.isonoe.net)\n",
  "readmeFilename": "README.md",
  "_id": "event-to-promise@0.3.2",
  "_from": "event-to-promise@^0.3.1"
}
